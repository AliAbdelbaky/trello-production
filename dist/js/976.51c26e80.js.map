{"version":3,"file":"js/976.51c26e80.js","mappings":"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","sources":["webpack://trello-app/./src/views/BoardView.vue","webpack://trello-app/./src/components/board/BoardCards.vue","webpack://trello-app/./src/components/board/ColumnTask.vue","webpack://trello-app/./src/components/board/ColumnTask.vue?bb36","webpack://trello-app/./src/components/board/BoardCards.vue?775a","webpack://trello-app/./src/views/BoardView.vue?3b6e"],"sourcesContent":["<template>\r\n  <div class=\"board-page\">\r\n    <BaordCards :columns=\"BoardModule.board.columns\" />\r\n    <div @click.self=\"closeTask\" class=\"task-bg\" v-if=\"isTaskOpen\">\r\n      <router-view />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BaordCards from \"@/components/board/BoardCards.vue\";\r\nimport { ref } from \"@vue/reactivity\";\r\nimport { mapState } from \"vuex\";\r\nexport default {\r\n  name: \"BoardView\",\r\n  setup() {\r\n    const title = ref(\"Board Vue\");\r\n    return { title };\r\n  },\r\n  components: { BaordCards },\r\n  computed: {\r\n    ...mapState([\"BoardModule\"]),\r\n    isTaskOpen() {\r\n      return this.$route.name === \"task\";\r\n    },\r\n  },\r\n  methods: {\r\n    closeTask() {\r\n      this.$router.push({ name: \"board\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <div class=\"column-container\">\r\n    <div\r\n      class=\"column\"\r\n      v-for=\"(column, $columnIndex) in columns\"\r\n      :key=\"$columnIndex\"\r\n      draggable=\"true\"\r\n      @drop=\"moveTaskOrColumn($event, column.tasks, $columnIndex)\"\r\n      @dragstart.self=\"pickupColumn($event, $columnIndex)\"\r\n      @dragover.prevent\r\n      @dragenter.prevent\r\n    >\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">{{ column.name }}</div>\r\n        <div class=\"card-body\">\r\n          <ColumnTask\r\n            :tasks=\"column.tasks\"\r\n            :columnIndex=\"$columnIndex\"\r\n            :columns=\"columns\"\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          class=\"add_task_input\"\r\n          placeholder=\"+ Enter new task\"\r\n          @keyup.enter=\"createTask($event, column.tasks)\"\r\n          @blur=\"createTask($event, column.tasks)\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"column\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"add_column_input\"\r\n            v-model=\"columnName\"\r\n            placeholder=\"+ Enter new list\"\r\n            @keyup.enter=\"createColumn\"\r\n            @blur=\"createColumn\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ColumnTask from \"./ColumnTask\";\r\nexport default {\r\n  props: [\"columns\"],\r\n  components: {\r\n    ColumnTask,\r\n  },\r\n  data() {\r\n    return {\r\n      columnName: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    createTask(e, tasks) {\r\n      if (!e.target.value == \"\") {\r\n        this.$store.commit(\"BoardModule/ADD_TASK\", {\r\n          tasks,\r\n          name: e.target.value,\r\n        });\r\n      } else {\r\n        return;\r\n      }\r\n      e.target.value = \"\";\r\n    },\r\n    createColumn() {\r\n      if (!this.columnName == \"\") {\r\n        this.$store.commit(\"BoardModule/ADD_COLUMN\", this.columnName);\r\n      } else {\r\n        return;\r\n      }\r\n      this.columnName = \"\";\r\n    },\r\n\r\n    pickupColumn(e, columnIndex) {\r\n      e.dataTransfer.effectAllowed = \"move\";\r\n      e.dataTransfer.dropEffect = \"move\";\r\n\r\n      e.dataTransfer.setData(\"from-column-index\", columnIndex);\r\n      e.dataTransfer.setData(\"type\", \"column\");\r\n    },\r\n    moveTaskOrColumn(e, toTasks, toColumnIndex, toTaskIndex) {\r\n      const type = e.dataTransfer.getData(\"type\");\r\n      if (type === \"task\") {\r\n        this.moveTask(\r\n          e,\r\n          toTasks,\r\n          toTaskIndex !== undefined ? toTaskIndex : toTasks.length\r\n        );\r\n      } else {\r\n        this.moveColumn(e, toColumnIndex);\r\n      }\r\n    },\r\n    moveColumn(e, toColumnIndex) {\r\n      const fromColumnIndex = e.dataTransfer.getData(\"from-column-index\");\r\n      this.$store.commit(\"BoardModule/MOVE_COLUMN\", {\r\n        fromColumnIndex,\r\n        toColumnIndex,\r\n      });\r\n    },\r\n    moveTask(e, toTasks, toTaskIndex) {\r\n      const fromColumnIndex = e.dataTransfer.getData(\"from-column-index\");\r\n      const fromTasks = this.columns[fromColumnIndex].tasks;\r\n      const taskIndex = e.dataTransfer.getData(\"task-index\");\r\n      this.$store.commit(\"BoardModule/MOVE_TASK\", {\r\n        fromTasks,\r\n        toTaskIndex,\r\n        toTasks,\r\n        taskIndex,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <div class=\"tasks-list\">\r\n    <div\r\n      class=\"task\"\r\n      v-for=\"(task, $taskIndex) in tasks\"\r\n      :key=\"$taskIndex\"\r\n      draggable=\"true\"\r\n      @dragstart=\"pickupTask($event, $taskIndex, columnIndex)\"\r\n      @dragover.prevent\r\n      @dragenter.prevent\r\n      @drop.stop=\"moveTaskOrColumn($event, tasks, columnIndex, $taskIndex)\"\r\n    >\r\n      <div class=\"wraaper\" @click=\"goToTask(task.id)\">\r\n        <span class=\"title\"> {{ $taskIndex + 1 }} {{ task.name }} </span>\r\n        <p class=\"desc text-small\" v-if=\"task.description\">\r\n          {{ task.description }}\r\n        </p>\r\n      </div>\r\n      <div class=\"delete-task\" @click=\"deleteTask($taskIndex, columnIndex)\">\r\n        <BaseIcon name=\"trash-2\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: {\r\n    tasks: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    columnIndex: {\r\n      type: [String, Number],\r\n      required: true,\r\n    },\r\n    columns: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  methods: {\r\n    goToTask(id) {\r\n      this.$router.push({ name: \"task\", params: { id: id } });\r\n    },\r\n    deleteTask(taskIndex, columnIndex) {\r\n      this.$router.push({ name: \"board\" });\r\n      this.$store.commit(\"BoardModule/REMOVE_TASK\", {\r\n        taskIndex,\r\n        columnIndex,\r\n        columns: this.columns,\r\n      });\r\n    },\r\n    moveTaskOrColumn(e, toTasks, toColumnIndex, toTaskIndex) {\r\n      const type = e.dataTransfer.getData(\"type\");\r\n      if (type === \"task\") {\r\n        this.moveTask(\r\n          e,\r\n          toTasks,\r\n          toTaskIndex !== undefined ? toTaskIndex : toTasks.length\r\n        );\r\n      } else {\r\n        this.moveColumn(e, toColumnIndex);\r\n      }\r\n    },\r\n    moveTask(e, toTasks, toTaskIndex) {\r\n      const fromColumnIndex = e.dataTransfer.getData(\"from-column-index\");\r\n      const fromTasks = this.columns[fromColumnIndex].tasks;\r\n      const taskIndex = e.dataTransfer.getData(\"task-index\");\r\n      this.$store.commit(\"BoardModule/MOVE_TASK\", {\r\n        fromTasks,\r\n        toTaskIndex,\r\n        toTasks,\r\n        taskIndex,\r\n      });\r\n    },\r\n    moveColumn(e, toColumnIndex) {\r\n      const fromColumnIndex = e.dataTransfer.getData(\"from-column-index\");\r\n      this.$store.commit(\"BoardModule/MOVE_COLUMN\", {\r\n        fromColumnIndex,\r\n        toColumnIndex,\r\n      });\r\n    },\r\n    pickupTask(e, taskIndex, fromColumnIndex) {\r\n      e.dataTransfer.effectAllowed = \"move\";\r\n      e.dataTransfer.dropEffect = \"move\";\r\n      e.dataTransfer.setData(\"task-index\", taskIndex);\r\n      e.dataTransfer.setData(\"from-column-index\", fromColumnIndex);\r\n      e.dataTransfer.setData(\"type\", \"task\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./ColumnTask.vue?vue&type=template&id=e6b8924a\"\nimport script from \"./ColumnTask.vue?vue&type=script&lang=js\"\nexport * from \"./ColumnTask.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"E:\\\\Projects\\\\webDesign\\\\trello-app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./BoardCards.vue?vue&type=template&id=0cd3968a\"\nimport script from \"./BoardCards.vue?vue&type=script&lang=js\"\nexport * from \"./BoardCards.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"E:\\\\Projects\\\\webDesign\\\\trello-app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./BoardView.vue?vue&type=template&id=4aaa4474\"\nimport script from \"./BoardView.vue?vue&type=script&lang=js\"\nexport * from \"./BoardView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"E:\\\\Projects\\\\webDesign\\\\trello-app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_createVNode","_component_BaordCards","columns","_ctx","board","$options","onClick","_component_router_view","_Fragment","_renderList","$props","column","$columnIndex","key","draggable","onDrop","$event","tasks","onDragstart","onDragover","onDragenter","_createElementVNode","_toDisplayString","name","_component_ColumnTask","columnIndex","type","placeholder","onKeyup","onBlur","$data","task","$taskIndex","id","description","_component_BaseIcon","props","Object","required","String","Number","Array","methods","goToTask","this","$router","push","params","deleteTask","taskIndex","$store","commit","moveTaskOrColumn","e","toTasks","toColumnIndex","toTaskIndex","dataTransfer","getData","moveTask","undefined","length","moveColumn","fromColumnIndex","fromTasks","pickupTask","effectAllowed","dropEffect","setData","__exports__","components","ColumnTask","data","columnName","createTask","target","value","createColumn","pickupColumn","setup","title","ref","BaordCards","computed","mapState","isTaskOpen","$route","closeTask","render"],"sourceRoot":""}